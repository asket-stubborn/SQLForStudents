----
---- 1. Cоздание таблиц
CREATE TABLE JOHN.ABITURIENTS
(
  ID_ABITUR    NUMBER,										-- id абитуриента rowid не может быть NULL связь по ключам и индексам
  FIO          VARCHAR2(255 BYTE)               NOT NULL,   -- ФИО 
  ADRESS       VARCHAR2(255 BYTE)               ,	-- АДРЕСС
  BIRTH_DATE   DATE                             NOT NULL,	-- дата рождения
  MEDAL_EXIST  CHAR(1 BYTE)                     NOT NULL	-- медаль
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;  --- создание базы в пространстве USERS


CREATE UNIQUE INDEX JOHN.ABITURIENTS_PK ON JOHN.ABITURIENTS  -- СОЗДАНИЕ ИНДЕКСА ПО ID абитуриента
(ID_ABITUR)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

ALTER TABLE JOHN.ABITURIENTS ADD (		
  CONSTRAINT ABITURIENTS_PK
  PRIMARY KEY
  (ID_ABITUR)
  USING INDEX JOHN.ABITURIENTS_PK
  ENABLE VALIDATE);
  
  


CREATE TABLE JOHN.EXAMS
(
  ROW_ID            NUMBER                       NOT NULL,   --- ID записи
  ID_ABITURIENT     NUMBER                       NOT NULL,	--- id абитуриента
  ID_PREDMET        NUMBER                       NOT NULL,	--- id предмета
  BALL              NUMBER                      NOT NULL,	--- балл
  DATE_OF_COMPLETE  DATE                        NOT NULL	--- дата сдачи
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING; --- --- создание базы в пространстве USERS


ALTER TABLE JOHN.EXAMS ADD (   ---  --- создание идексов связанных с абитуриентами и их экзаменами
  CONSTRAINT EXAMS__ABITUR_R01 
  FOREIGN KEY (ID_ABITURIENT) 
  REFERENCES JOHN.ABITURIENTS (ID_ABITUR)
  ENABLE VALIDATE,
  CONSTRAINT EXAMS__PR_R01 
  FOREIGN KEY (ID_PREDMET) 
  REFERENCES JOHN.PREDMETS (ID_PREDMET)
  ENABLE VALIDATE);


CREATE TABLE JOHN.PREDMETS
(
  ID_PREDMET  NUMBER                             NOT NULL,   ---  id предмета
  PREDMET     VARCHAR2(255 CHAR)                NOT NULL	--- предмет
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING; --- --- создание базы в пространстве USERS


CREATE UNIQUE INDEX JOHN.PREDMETS_PK ON JOHN.PREDMETS -- создание индекса предмета 
(ID_PREDMET)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

ALTER TABLE JOHN.PREDMETS ADD (
  CONSTRAINT PREDMETS_PK
  PRIMARY KEY
  (ID_PREDMET)
  USING INDEX JOHN.PREDMETS_PK
  ENABLE VALIDATE);


CREATE TABLE JOHN.SPECIALIUZATION
(
  ID_SPEC     NUMBER                             NOT NULL,  --- id специализации
  NAME        VARCHAR2(255 BYTE)                NOT NULL, -- название 
  FACULTY     VARCHAR2(255 BYTE)                NOT NULL,  --- факультет
  START_BALL  NUMBER                            NOT NULL -- проходной балл
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE UNIQUE INDEX JOHN.SPECIALIUZATION_PK ON JOHN.SPECIALIUZATION  --- индекса специализации
(ID_SPEC)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

ALTER TABLE JOHN.SPECIALIUZATION ADD (
  CONSTRAINT SPECIALIUZATION_PK
  PRIMARY KEY
  (ID_SPEC)
  USING INDEX JOHN.SPECIALIUZATION_PK
  ENABLE VALIDATE);



CREATE TABLE JOHN.SPEC_PRED  -- таблица связи специализации и предмета
(
  ID_PRED       NUMBER                           NOT NULL,
  ID_CODE_SPEC  NUMBER                           NOT NULL
)
TABLESPACE USERS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE UNIQUE INDEX JOHN.SPEC_PRED_PK ON JOHN.SPEC_PRED  -- индексы связи предметов и специализаций
(ID_PRED, ID_CODE_SPEC)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

ALTER TABLE JOHN.SPEC_PRED ADD (
  CONSTRAINT SPEC_PRED_PK
  PRIMARY KEY
  (ID_PRED, ID_CODE_SPEC)
  USING INDEX JOHN.SPEC_PRED_PK
  ENABLE VALIDATE);

ALTER TABLE JOHN.SPEC_PRED ADD (
  CONSTRAINT SPEC_PRED_R01 
  FOREIGN KEY (ID_CODE_SPEC) 
  REFERENCES JOHN.SPECIALIUZATION (ID_SPEC)
  ENABLE VALIDATE,
  CONSTRAINT SPEC_PRED_R02 
  FOREIGN KEY (ID_PRED) 
  REFERENCES JOHN.PREDMETS (ID_PREDMET)
  ENABLE VALIDATE);
  
  ALTER TABLE ABITURIENTS ADD
( CONSTRAINT BIRTH_DATE_check CHECK (
 TO_CHAR( BIRTH_DATE, 'YYYY-MM-DD') >= '1990.01.01')  --- проверка на дату
 );
  
  ALTER TABLE EXAMS ADD
( CONSTRAINT EXAMS_DATE_OF_COMPLETE_check CHECK (
 TO_CHAR( DATE_OF_COMPLETE, 'YYYY-MM-DD') >= '1990.01.01') --- --- проверка на дату

 );
  
  
  
  
---2 ЗАДАНИЕ

INSERT INTO ABITURIENTS(ID_ABITUR, FIO, ADRESS,   MEDAL_EXIST, BIRTH_DATE) VALUES(1, 'Абашин Максим Викторович', 'г.Томск, ул. Говорова 20, кв 5', '0', TO_DATE('1997-10-09', 'YYYY-MM-DD '));
INSERT INTO ABITURIENTS(ID_ABITUR, FIO, ADRESS,   MEDAL_EXIST, BIRTH_DATE) VALUES(2, 'Васечко Алексей Андреевич', 'г.Северск, пер. Юрточный 17, кв 53', '0', TO_DATE('2003-05-19', 'YYYY-MM-DD '));
INSERT INTO ABITURIENTS(ID_ABITUR, FIO, ADRESS,   MEDAL_EXIST, BIRTH_DATE) VALUES(3, 'Дайтер Ирина Игоревна', 'г.Томск, ул. Яковлева 35а, кв 1', '1', TO_DATE('1999-03-01', 'YYYY-MM-DD '));
INSERT INTO ABITURIENTS(ID_ABITUR, FIO, ADRESS,   MEDAL_EXIST, BIRTH_DATE) VALUES(4, 'Иващенко Альбина Ириковна', 'г.Новосибирск, ул. Татарская 3, кв 8', '1', TO_DATE('1995-05-27', 'YYYY-MM-DD '));
INSERT INTO ABITURIENTS(ID_ABITUR, FIO, ADRESS,   MEDAL_EXIST, BIRTH_DATE) VALUES(5, 'Копелев Александр Михайлович', 'г.Томск, ул. Суворово 35, кв 72', '0', TO_DATE('1991-12-12', 'YYYY-MM-DD '));

INSERT INTO ABITURIENTS(ID_ABITUR, FIO, ADRESS,   MEDAL_EXIST, BIRTH_DATE) VALUES(6, 'Кипелов Валидимир Озыйбекович', 'г.Томск, ул. Пушкина 45, кв 21', '1', TO_DATE('1993-05-06', 'YYYY-MM-DD '));

INSERT INTO SPECIALIUZATION(ID_SPEC, "NAME",FACULTY,START_BALL) VALUES(1, 'Прикладная математика','IT-4',120);
INSERT INTO SPECIALIUZATION(ID_SPEC, "NAME",FACULTY,START_BALL) VALUES(2, 'Прикладная Информатика','IT-3',165);
INSERT INTO SPECIALIUZATION(ID_SPEC, "NAME",FACULTY,START_BALL) VALUES(3, 'Математическое моделирование','IT-6',174);
INSERT INTO SPECIALIUZATION(ID_SPEC, "NAME",FACULTY,START_BALL) VALUES(4, 'Вычислительная техника','IT-1',120);
INSERT INTO SPECIALIUZATION(ID_SPEC, "NAME",FACULTY,START_BALL) VALUES(5, 'Автоматизация промышленных комплексов','IT-2',110);

INSERT INTO SPECIALIUZATION(ID_SPEC, "NAME",FACULTY,START_BALL) VALUES(6, 'Философский факультет','PH-1',130);



INSERT INTO SPEC_PRED (ID_PRED,ID_CODE_SPEC) VALUES(4,1);
INSERT INTO SPEC_PRED (ID_PRED,ID_CODE_SPEC) VALUES(2,1);
INSERT INTO SPEC_PRED (ID_PRED,ID_CODE_SPEC) VALUES(5,1);
INSERT INTO SPEC_PRED (ID_PRED,ID_CODE_SPEC) VALUES(4,2);
INSERT INTO SPEC_PRED (ID_PRED,ID_CODE_SPEC) VALUES(2,2);
INSERT INTO SPEC_PRED (ID_PRED,ID_CODE_SPEC) VALUES(3,2);
INSERT INTO SPEC_PRED (ID_PRED,ID_CODE_SPEC) VALUES(4,3);
INSERT INTO SPEC_PRED (ID_PRED,ID_CODE_SPEC) VALUES(5,3);
INSERT INTO SPEC_PRED (ID_PRED,ID_CODE_SPEC) VALUES(2,3);
INSERT INTO SPEC_PRED (ID_PRED,ID_CODE_SPEC) VALUES(1,4);
INSERT INTO SPEC_PRED (ID_PRED,ID_CODE_SPEC) VALUES(2,4);
INSERT INTO SPEC_PRED (ID_PRED,ID_CODE_SPEC) VALUES(5,4);
INSERT INTO SPEC_PRED (ID_PRED,ID_CODE_SPEC) VALUES(2,5);
INSERT INTO SPEC_PRED (ID_PRED,ID_CODE_SPEC) VALUES(4,5);
INSERT INTO SPEC_PRED (ID_PRED,ID_CODE_SPEC) VALUES(5,5);

INSERT INTO SPEC_PRED (ID_PRED,ID_CODE_SPEC) VALUES(1,6);
INSERT INTO SPEC_PRED (ID_PRED,ID_CODE_SPEC) VALUES(2,6);
INSERT INTO SPEC_PRED (ID_PRED,ID_CODE_SPEC) VALUES(6,6);



INSERT INTO PREDMETS(ID_PREDMET, PREDMET) VALUES(1, 'Математика');
INSERT INTO PREDMETS(ID_PREDMET, PREDMET) VALUES(2, 'Русский Язык');
INSERT INTO PREDMETS(ID_PREDMET, PREDMET) VALUES(3, 'Информатика');
INSERT INTO PREDMETS(ID_PREDMET, PREDMET) VALUES(4, 'Математика Профильный');
INSERT INTO PREDMETS(ID_PREDMET, PREDMET) VALUES(5, 'Физика');

INSERT INTO PREDMETS(ID_PREDMET, PREDMET) VALUES(6, 'Обществознание');

INSERT INTO EXAMS (ROW_ID,ID_ABITURIENT,ID_PREDMET,BALL,DATE_OF_COMPLETE) VALUES (1,1,1,85,TO_DATE('2019-06-12', 'YYYY-MM-DD '));
INSERT INTO EXAMS (ROW_ID,ID_ABITURIENT,ID_PREDMET,BALL,DATE_OF_COMPLETE) VALUES (2,1,2,73,TO_DATE('2019-06-13', 'YYYY-MM-DD '));
INSERT INTO EXAMS (ROW_ID,ID_ABITURIENT,ID_PREDMET,BALL,DATE_OF_COMPLETE) VALUES (3,1,3,60,TO_DATE('2019-06-14', 'YYYY-MM-DD '));
INSERT INTO EXAMS (ROW_ID,ID_ABITURIENT,ID_PREDMET,BALL,DATE_OF_COMPLETE) VALUES (4,1,4,100,TO_DATE('2019-06-16', 'YYYY-MM-DD '));
INSERT INTO EXAMS (ROW_ID,ID_ABITURIENT,ID_PREDMET,BALL,DATE_OF_COMPLETE) VALUES (5,2,5,84,TO_DATE('2019-06-17', 'YYYY-MM-DD '));
INSERT INTO EXAMS (ROW_ID,ID_ABITURIENT,ID_PREDMET,BALL,DATE_OF_COMPLETE) VALUES (6,2,2,62,TO_DATE('2019-06-18', 'YYYY-MM-DD '));
INSERT INTO EXAMS (ROW_ID,ID_ABITURIENT,ID_PREDMET,BALL,DATE_OF_COMPLETE) VALUES (7,2,1,42,TO_DATE('2019-06-19', 'YYYY-MM-DD '));
INSERT INTO EXAMS (ROW_ID,ID_ABITURIENT,ID_PREDMET,BALL,DATE_OF_COMPLETE) VALUES (8,3,3,92,TO_DATE('2019-06-20', 'YYYY-MM-DD '));
INSERT INTO EXAMS (ROW_ID,ID_ABITURIENT,ID_PREDMET,BALL,DATE_OF_COMPLETE) VALUES (9,3,2,97,TO_DATE('2019-06-21', 'YYYY-MM-DD '));
INSERT INTO EXAMS (ROW_ID,ID_ABITURIENT,ID_PREDMET,BALL,DATE_OF_COMPLETE) VALUES (10,3,4,56,TO_DATE('2019-06-22', 'YYYY-MM-DD '));
INSERT INTO EXAMS (ROW_ID,ID_ABITURIENT,ID_PREDMET,BALL,DATE_OF_COMPLETE) VALUES (11,4,2,42,TO_DATE('2019-06-22', 'YYYY-MM-DD '));
INSERT INTO EXAMS (ROW_ID,ID_ABITURIENT,ID_PREDMET,BALL,DATE_OF_COMPLETE) VALUES (12,4,3,83,TO_DATE('2019-06-12', 'YYYY-MM-DD '));
INSERT INTO EXAMS (ROW_ID,ID_ABITURIENT,ID_PREDMET,BALL,DATE_OF_COMPLETE) VALUES (13,4,5,94,TO_DATE('2019-06-2', 'YYYY-MM-DD '));
INSERT INTO EXAMS (ROW_ID,ID_ABITURIENT,ID_PREDMET,BALL,DATE_OF_COMPLETE) VALUES (14,5,1,57,TO_DATE('2019-06-12', 'YYYY-MM-DD '));
INSERT INTO EXAMS (ROW_ID,ID_ABITURIENT,ID_PREDMET,BALL,DATE_OF_COMPLETE) VALUES (15,5,2,73,TO_DATE('2019-06-8', 'YYYY-MM-DD '));
INSERT INTO EXAMS (ROW_ID,ID_ABITURIENT,ID_PREDMET,BALL,DATE_OF_COMPLETE) VALUES (16,5,5,94,TO_DATE('2019-06-10', 'YYYY-MM-DD '));
INSERT INTO EXAMS (ROW_ID,ID_ABITURIENT,ID_PREDMET,BALL,DATE_OF_COMPLETE) VALUES (17,5,4,94,TO_DATE('2019-06-10', 'YYYY-MM-DD '));

INSERT INTO EXAMS (ROW_ID,ID_ABITURIENT,ID_PREDMET,BALL,DATE_OF_COMPLETE) VALUES (18,6,1,84,TO_DATE('2019-07-08', 'YYYY-MM-DD '));
INSERT INTO EXAMS (ROW_ID,ID_ABITURIENT,ID_PREDMET,BALL,DATE_OF_COMPLETE) VALUES (19,6,2,76,TO_DATE('2019-06-13', 'YYYY-MM-DD '));
INSERT INTO EXAMS (ROW_ID,ID_ABITURIENT,ID_PREDMET,BALL,DATE_OF_COMPLETE) VALUES (20,6,6,56,TO_DATE('2019-06-14', 'YYYY-MM-DD '));


commit;


---3 Задание


SELECT FIO FROM ABITURIENTS
WHERE ADRESS LIKE '%Томск%' and MEDAL_EXIST=1 ORDER BY(BIRTH_DATE); --1



SELECT DISTINCT A.FIO,E.BALL FROM ABITURIENTS A
JOIN EXAMS E ON E.ID_ABITURIENT = A.ID_ABITUR
JOIN PREDMETS P ON P.ID_PREDMET = E.ID_PREDMET
WHERE P.PREDMET LIKE '%Математика%' AND E.BALL>90 ORDER BY(E.BALL) DESC; --2 


SELECT SUMER.FAC,SUMER.FIO,SUMER.BALLS FROM SPECIALIUZATION S1,
    (SELECT s.FACULTY AS FAC , a.fio AS FIO,sum(e.ball) AS BALLS
        FROM abiturients a, exams e,SPEC_PRED sp,SPECIALIUZATION S
  
        WHERE e.ID_PREDMET = sp.ID_PRED and a.ID_ABITUR=e.ID_ABITURIENT and sp.ID_CODE_SPEC = S.ID_SPEC
         GROUP BY a.fio,s.FACULTY) SUMER 
WHERE S1.FACULTY = SUMER.FAC AND SUMER.BALLS>S1.START_BALL; -- 3

with t1 as (
select P.PREDMET, count(e.ID_ABITURIENT),avg(e.BALL) from abiturients a, exams e,predmets p
where a.ADRESS like '%Томск%' and e.ID_ABITURIENT = a.ID_ABITUR and p.ID_PREDMET = e.ID_PREDMET and e.ID_PREDMET NOT IN 
( SELECT ID_PREDMET FROM exams,SPEC_PRED,SPECIALIUZATION WHERE SPECIALIUZATION.NAME LIKE '%Философский%' and SPEC_PRED.ID_CODE_SPEC =SPECIALIUZATION.ID_SPEC and SPEC_PRED.ID_PRED = EXAMS.ID_PREDMET )
group by P.PREDMET,e.ID_PREDMET),
t2 as (
select P.PREDMET,count(e.ID_ABITURIENT),avg(e.BALL) from abiturients a, exams e,predmets p
where a.ADRESS not like '%Томск%' and e.ID_ABITURIENT = a.ID_ABITUR and p.ID_PREDMET = e.ID_PREDMET and e.ID_PREDMET NOT IN 
( SELECT ID_PREDMET FROM exams,SPEC_PRED,SPECIALIUZATION WHERE SPECIALIUZATION.NAME LIKE '%Философский%' and SPEC_PRED.ID_CODE_SPEC =SPECIALIUZATION.ID_SPEC and SPEC_PRED.ID_PRED = EXAMS.ID_PREDMET )
group by P.PREDMET,e.ID_PREDMET)
select * from t1
union
select * from t2; -- 3.4

SELECT SUMER.FIO,max(SUMER.BALLS)FROM SPECIALIUZATION S1,
    (SELECT s.FACULTY AS FAC , a.fio AS FIO,sum(e.ball) AS BALLS
        FROM abiturients a, exams e,SPEC_PRED sp,SPECIALIUZATION S
  
        WHERE e.ID_PREDMET = sp.ID_PRED and a.ID_ABITUR=e.ID_ABITURIENT and sp.ID_CODE_SPEC = S.ID_SPEC
         GROUP BY a.fio,s.FACULTY) SUMER 
WHERE S1.FACULTY = SUMER.FAC and S1.START_BALL< sumer.balls
group by  sumer.fio,sumer.fac -- 3.5




select distinct s.NAME from SPECIALIUZATION s 
join SPEC_PRED sp on sp.ID_CODE_SPEC = s.ID_SPEC
join exams e on e.ID_PREDMET=sp.ID_PRED
join abiturients a on a.ID_ABITUR=e.ID_ABITURIENT
where a.ADRESS not like '%Томск%';  -- 3.6


----4


update  exams 
    set exams.BALL = exams.BALL +2
    where exams.ID_ABITURIENT in ( Select abiturients.ID_ABITUR FROM abiturients WHERE abiturients.ADRESS LIKE '%Северск%')
        and exams.ID_PREDMET in (Select predmets.ID_PREDMET from predmets where predmets.PREDMET='Физика');
        --4.1




delete from abiturients cascade
    where exists (select ID_ABITURIENT from exams where ball < 50); -- 4.2


-----5

  create view v_max as SELECT SUMER.FIO as FIO,max(SUMER.BALLS) AS BALLS FROM SPECIALIUZATION S1,
    (SELECT s.FACULTY AS FAC , a.fio AS FIO,sum(e.ball) AS BALLS
        FROM abiturients a, exams e,SPEC_PRED sp,SPECIALIUZATION S
  
        WHERE e.ID_PREDMET = sp.ID_PRED and a.ID_ABITUR=e.ID_ABITURIENT and sp.ID_CODE_SPEC = S.ID_SPEC
         GROUP BY a.fio,s.FACULTY) SUMER 
WHERE S1.FACULTY = SUMER.FAC and S1.START_BALL< sumer.balls
group by  sumer.fio,sumer.fac;

create view v_spec_another_city AS select distinct s.NAME AS name from SPECIALIUZATION s 
join SPEC_PRED sp on sp.ID_CODE_SPEC = s.ID_SPEC
join exams e on e.ID_PREDMET=sp.ID_PRED
join abiturients a on a.ID_ABITUR=e.ID_ABITURIENT
where a.ADRESS not like '%Томск%';


-----6.1

CREATE INDEX JOHN.INDEX_ABITUR_FIO ON JOHN.ABITURIENTS
(FIO)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           ); -- 6.1

CREATE INDEX JOHN.INDEX_SPEC_FACULTY ON JOHN.SPECIALIUZATION
(FACULTY)
LOGGING
TABLESPACE USERS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           ); -- 6.2


